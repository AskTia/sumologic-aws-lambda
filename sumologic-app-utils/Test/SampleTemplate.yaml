AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Template to setup the API Gateway app with AWS and Sumo Logic resources for AWS Observability Solution."

Parameters:
  Section1aSumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  Section1bSumoAccessID:
    Type: String
    Description: "Sumo Logic Access ID. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  Section1cSumoAccessKey:
    Type: String
    Description: "Sumo Logic Access Key. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  Section1dSumoOrganizationId:
    Description: "Enter your Sumo Logic Organization ID, which you can find on your Sumo Logic console under Account."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."
  Section1eRemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "To delete collectors, sources and apps when the stack is deleted, set this parameter to True. Default is True.
                  Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String

  CreateExplorerView:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  ExplorerName:
    Type: String
    Default: ""
  ExplorerFields:
    Type: CommaDelimitedList
    Default: ""

  CreateMetricRule:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  MetricRuleName:
    Type: String
    Default: ""
  MatchExpression:
    Type: String
    Default: ""
  EntityRule:
    Type: String
    Default: ""

  CreateFER:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  FERName:
    Type: String
    Default: ""
  FERScope:
    Type: String
    Default: ""
  FERExpression:
    Type: String
    Default: ""

  InstallAPP:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  FolderName:
    Type: String
    Default: ""

  CreateCollector:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'

  UpdateSource:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'

  TagResources:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'

  AutoEnableS3:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'

  CreateDeliveryChannel:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'

  CreateTrail:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'

Conditions:

  create_explorer: !Equals [!Ref CreateExplorerView, 'Yes']

  create_metric_rule: !Equals [!Ref CreateMetricRule, 'Yes']

  create_fer: !Equals [!Ref CreateFER, 'Yes']

  install_app: !Equals [!Ref InstallAPP, 'Yes']

  update_source: !Equals [!Ref UpdateSource, 'Yes']

  tag_existing_aws_resources: !Equals [!Ref TagResources, 'Yes']

  create_collector: !Equals [!Ref CreateCollector, 'Yes']

  auto_enable_existing: !Equals [!Ref AutoEnableS3, 'Yes']

  create_sns_topic: !Equals [!Ref CreateDeliveryChannel, 'Yes']

  creaye_trail: !Equals [!Ref CreateTrail, 'Yes']

Resources:
  SumoLogicHelperRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AwsObservabilityLambdaExecutePolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - tag:TagResources
                  - tag:UntagResources
                  - rds:DescribeDBClusters
                  - rds:DescribeDBInstances
                  - rds:AddTagsToResource
                  - rds:RemoveTagsFromResource
                  - apigateway:GET
                  - apigateway:DELETE
                  - apigateway:POST
                  - apigateway:PUT
                  - ec2:DescribeInstances
                  - ec2:CreateTags
                  - ec2:DeleteTags
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:RemoveTags
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - lambda:ListFunctions
                  - lambda:TagResource
                  - lambda:UntagResource
                  - dynamodb:ListTables
                  - dynamodb:TagResource
                  - dynamodb:UntagResource
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cloudtrail:CreateTrail
                  - cloudtrail:DeleteTrail
                  - cloudtrail:UpdateTrail
                  - cloudtrail:StartLogging
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                  - s3:PutBucketAcl
                  - s3:GetBucketAcl
                  - s3:GetBucketLogging
                  - s3:PutBucketLogging
                  - config:DescribeDeliveryChannels
                  - config:PutDeliveryChannel
                  - config:DeleteDeliveryChannel
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - ec2:DescribeInstances
                  - ec2:DescribeVpcs
                  - ec2:DeleteFlowLogs
                  - ec2:CreateFlowLogs
                  - ec2:DescribeFlowLogs
                  - logs:CreateLogDelivery
                  - logs:DeleteLogDelivery
                Resource: '*'

  SumoLogicHelperFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: main.handler
      Runtime: python3.7
      CodeUri: s3://sumologiclambdahelper-us-east-1/sumo_app_utils/v2.0.2/sumo_app_utils.zip
      MemorySize: 128
      Timeout: 900
      Role:
        Fn::GetAtt:
          - SumoLogicHelperRole
          - Arn

  SumoCloudTrail:
    Condition: creaye_trail
    Type: Custom::AWSTrail
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      IsLogging: true
      IsMultiRegionTrail: false
      S3BucketName: "sumologiclambdahelper-us-east-1"
      TrailName: "Aws-Observability-onemoreupdae"

  CreateSumoLogicAWSExplorerView:
    Type: Custom::SumoLogicAWSExplorer
    Condition: create_explorer
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      ExplorerName: !Ref ExplorerName
      MetadataKeys: !Ref ExplorerFields
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  TagAWSResources:
    Type: Custom::TagAWSResources
    Condition: tag_existing_aws_resources
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      Region: !Ref "AWS::Region"
      AWSResource: dynamodb
      Tags:
        mili: "testingagain"
      AccountID: !Ref "AWS::AccountId"
      Filter: ".*"

  APIGatewayMetricRule:
    Type: Custom::SumoLogicMetricRules
    Condition: create_metric_rule
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      MetricRuleName: !Ref MetricRuleName
      MatchExpression: !Ref MatchExpression
      ExtractVariables:
        entity: !Ref EntityRule
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  APIGatewayFieldExtractionRule:
    Type: Custom::SumoLogicFieldExtractionRule
    Condition: create_fer
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      FieldExtractionRuleName: !Ref FERName
      FieldExtractionRuleScope: !Ref FERScope
      FieldExtractionRuleParseExpression: !Ref FERExpression
      FieldExtractionRuleParseEnabled: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  sumoApp:
    Type: Custom::App
    Condition: install_app
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      Region: !Ref "AWS::Region"
      AppName: "AWS Observability Api Gateway App"
      FolderName: !Ref FolderName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      AppSources:
        logsrc: "_sourceCategory=fasdfsdad"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  sumoAppwithUID:
    Type: Custom::App
    Condition: install_app
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      Region: !Ref "AWS::Region"
      AppName: "Another App"
      FolderName: !Ref FolderName
      AppId: "924d7e2a-a14a-4b11-8c91-133241be2a51"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      AppSources:
        logsrc: "_sourceCategory=\"sfsdfsd\""
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  SumoCloudTrailUpdateSource:
    Type: Custom::SumoLogicUpdateFields
    Condition: update_source
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      Region: !Ref "AWS::Region"
      SourceName: "SourabhTestingHTTPSource"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      CollectorName: "SourabhTestingCollector"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      Fields:
        account: "fsdsd"
        region: "asfasf"

  SumoRole:
    Type: AWS::IAM::Role
    Condition: create_collector
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::926226587429:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${Section1aSumoDeployment}:${Section1dSumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                Resource:
                  "*"

  SumoHostedCollector:
    Condition: create_collector
    Type: Custom::Collector
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      CollectorName: "SourabhTestingCollector"
      SourceCategory: "testingSource"
      Description: "This is again Updated collector"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  SumoS3Source:
    Type: Custom::AWSSource
    Condition: create_collector
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      SourceType: AwsS3Bucket
      Region: !Ref "AWS::Region"
      SourceName: "SourabhSource"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceCategory: "TestingSourceCategory"
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      TargetBucketName: "sumologiclambdahelper-us-east-1"
      PathExpression: "asdasd"
      DateFormat: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
      DateLocatorRegex: '.*"updatedAt":"(.*)".*'
      RoleArn: !GetAtt SumoRole.Arn

  SumoHTTPSource:
    Condition: create_collector
    Type: Custom::HTTPSource
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      Region: !Ref "AWS::Region"
      SourceName: "SourabhTestingHTTPSource"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceCategory: "TestingCategory"
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  ExistingAWSResources:
    Type: Custom::EnableS3LogsResources
    Condition: auto_enable_existing
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      AWSResource: "vpc"
      BucketName: "sumologiclambdahelper-us-east-1"
      Filter: ".*"
      BucketPrefix: "djvsdvsbdjb"
      AccountID: !Ref "AWS::AccountId"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack

  DeliveryChannelWhenConfigIsTurnedOn:
    Type: "Custom::ConfigDeliveryChannel"
    Condition: create_sns_topic
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      DeliveryFrequency: Six_Hours
      S3BucketName: "sumologiclambdahelper-us-east-1"
      S3KeyPrefix: "sourabh"
      SnsTopicARN: "arn:aws:sns:us-east-1:668508221233:dynamodb"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
