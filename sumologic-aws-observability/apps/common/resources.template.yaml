AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Template to setup the Common AWS and Sumo Logic resources."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "Sumo Logic Access Configuration (Required)"
        Parameters:
          - Section1aSumoDeployment
          - Section1bSumoAccessID
          - Section1cSumoAccessKey
          - Section1dSumoOrganizationId
          - Section1eRemoveSumoResourcesOnDeleteStack

      - Label:
          default: "Sumo Logic AWS Resources Tagging Configuration (Required)"
        Parameters:
          - Section2aAccountAlias

      - Label:
          default: "Sumo Logic Collector Configuration"
        Parameters:
          - Section3aCreateCollector
          - Section3bCollectorName

      - Label:
          default: "CloudWatch Metrics Source Configuration"
        Parameters:
          - Section4aCreateCloudWatchMetricsSource
          - Section4bCloudWatchMetricsSourceName
          - Section4cNamespaces

      - Label:
          default: "CloudTrail Log Source Configuration"
        Parameters:
          - Section5aCreateCommonBucket
          - Section5bCommonBucketName
          - Section5cCreateCloudTrailLogSource
          - Section5dCloudTrailBucketPathExpression
          - Section5eCloudTrailLogsSourceName
          - Section5fCloudTrailLogsSourceCategoryName

    ParameterLabels:
      Section1aSumoDeployment:
        default: "Sumo Logic Deployment Name"
      Section1bSumoAccessID:
        default: "Sumo Logic Access ID"
      Section1cSumoAccessKey:
        default: "Sumo Logic Access Key"
      Section1dSumoOrganizationId:
        default: "Sumo Logic Organization Id"
      Section1eRemoveSumoResourcesOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      Section2aAccountAlias:
        default: "Alias for AWS Account Identification"

      Section3aCreateCollector:
        default: "Create Sumo Logic Collector"
      Section3bCollectorName:
        default: "Collector Name"

      Section4aCreateCloudWatchMetricsSource:
        default: "Create Sumo Logic CloudWatch Metrics Source"
      Section4bCloudWatchMetricsSourceName:
        default: "Sumo Logic CloudWatch Metrics Source Name"
      Section4cNamespaces:
        default: "CloudWatch Metrics Namespaces"

      Section5aCreateCommonBucket:
        default: "Create AWS S3 Bucket"
      Section5bCommonBucketName:
        default: "AWS S3 Bucket Name"
      Section5cCreateCloudTrailLogSource:
        default: "Create Sumo Logic CloudTrail Logs Source"
      Section5dCloudTrailBucketPathExpression:
        default: "Path Expression for the logs"
      Section5eCloudTrailLogsSourceName:
        default: "Sumo Logic CloudTrail Logs Source Name"
      Section5fCloudTrailLogsSourceCategoryName:
        default: "Sumo Logic CloudTrail Logs Source Category Name"

Parameters:
  Section1aSumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  Section1bSumoAccessID:
    Type: String
    Description: "Sumo Logic Access ID. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  Section1cSumoAccessKey:
    Type: String
    Description: "Sumo Logic Access Key. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  Section1dSumoOrganizationId:
    Description: "Appears on the Account Overview page that displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."
  Section1eRemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "To delete collectors, sources and apps when the stack is deleted, set this parameter to True. Default is True.
                  Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String

  Section2aAccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: "Alias must only contain uppercase, lowercase letters, number and length less than or equal to 30 characters."
    MaxLength: 30

  Section3aCreateCollector:
    Type: String
    Description: "Yes - Installs the Common Collector for the Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this Collector."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section3bCollectorName:
    Type: String
    Description: "Provide a Collector Name"
    Default: ""

  Section4aCreateCloudWatchMetricsSource:
    Type: String
    Description: "Yes - Creates a Sumo Logic CloudWatch Metrics Source which collects Metrics for multiple Namespaces from the region selected.
                  No - If you already have a CloudWatch Metrics Source collecting metrics."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section4bCloudWatchMetricsSourceName:
    Type: String
    Description: "Provide a Cloud Watch Metrics Source Name"
    Default: ""
  Section4cNamespaces:
    Default: "AWS/ApplicationELB, AWS/ApiGateway, AWS/DynamoDB, AWS/Lambda, AWS/RDS"
    Description: Provide Comma delimited list of the namespaces to collect.
    Type: CommaDelimitedList

  Section5aCreateCommonBucket:
    Type: String
    Description: "Yes - Create a new Common bucket in AWS S3.
                  No - Use an existing bucket from AWS S3 which has required CloudTrail and ALB Logs."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section5bCommonBucketName:
    Type: String
    Description: "Existing Bucket Name - Provide value if the Flag is set to No.
                  New Bucket Name - Provide a unique Bucket Name if the flag is set to Yes."
  Section5cCreateCloudTrailLogSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic Cloud Trail Log Source with provided bucket Name."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section5dCloudTrailBucketPathExpression:
    Type: String
    Description: Path expression to match one or more S3 objects. For example, ABC*.log or ABC.log
    Default: "*"
  Section5eCloudTrailLogsSourceName:
    Type: String
    Description: Change the CloudTrail Source name to be created else default name will be used.
    Default: ""
  Section5fCloudTrailLogsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if CloudTrail Source is not created.\n
                  New - Default will be used if CloudTrail Source is Created"
    Default: AWS/DynamoDb/CloudTrail/Logs

Conditions:
  create_target_s3_bucket: !Equals [!Ref Section5aCreateCommonBucket, 'Yes']
  install_cloudtrail_logs_source: !And
    - !Equals [!Ref Section5cCreateCloudTrailLogSource, 'Yes']
    - !Condition install_collector
  install_cloud_watch_metric_source: !And
    - !Equals [!Ref Section4aCreateCloudWatchMetricsSource, 'Yes']
    - !Condition install_collector
  install_collector: !Equals [!Ref Section3aCreateCollector, 'Yes']
  create_sns_subscription: !Or
    - !Condition create_target_s3_bucket
    - !Condition install_collector
  create_trail: !And
    - !Condition create_target_s3_bucket
    - !Condition install_cloudtrail_logs_source
  update_cloudtrail_source: !And
    - !Not [!Condition install_cloudtrail_logs_source]
    - !Condition install_collector
    - !Not [!Equals [!Ref Section5eCloudTrailLogsSourceName, '']]
    - !Not [!Equals [!Ref Section3bCollectorName, '']]

Mappings:
  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1

  Region2ELBAccountId:
    ap-east-1:
      AccountId: "754344448648"
    ap-northeast-1:
      AccountId: "582318560864"
    ap-northeast-2:
      AccountId: "600734575887"
    ap-northeast-3:
      AccountId: "383597477331"
    ap-south-1:
      AccountId: "718504428378"
    ap-southeast-1:
      AccountId: "114774131450"
    ap-southeast-2:
      AccountId: "783225319266"
    ca-central-1:
      AccountId: "985666609251"
    cn-north-1:
      AccountId: "638102146993"
    cn-northwest-1:
      AccountId: "037604701340"
    eu-central-1:
      AccountId: "054676820928"
    eu-north-1:
      AccountId: "897822967062"
    eu-west-1:
      AccountId: "156460612806"
    eu-west-2:
      AccountId: "652711504416"
    eu-west-3:
      AccountId: "009996457667"
    sa-east-1:
      AccountId: "507241528517"
    us-east-1:
      AccountId: "127311923021"
    us-east-2:
      AccountId: "033677994240"
    us-gov-east-1:
      AccountId: "190560391635"
    us-gov-west-1:
      AccountId: "048591011584"
    us-west-1:
      AccountId: "027434742980"
    us-west-2:
      AccountId: "797873946194"

Resources:

  SumoLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AwsObservabilityLambdaExecutePolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - tag:TagResources
                  - tag:UntagResources
                  - rds:DescribeDBClusters
                  - rds:DescribeDBInstances
                  - rds:AddTagsToResource
                  - rds:RemoveTagsFromResource
                  - apigateway:GET
                  - apigateway:DELETE
                  - apigateway:POST
                  - apigateway:PUT
                  - ec2:DescribeInstances
                  - ec2:CreateTags
                  - ec2:DeleteTags
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:RemoveTags
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - lambda:ListFunctions
                  - lambda:TagResource
                  - lambda:UntagResource
                  - dynamodb:ListTables
                  - dynamodb:TagResource
                  - dynamodb:UntagResource
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cloudtrail:CreateTrail
                  - cloudtrail:DeleteTrail
                  - cloudtrail:UpdateTrail
                  - cloudtrail:StartLogging
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                Resource: '*'

  SumoLogicLambdaHelper:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Join
        - ""
        - - !Sub "sumo-lambda-${Section2aAccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      Handler: main.handler
      Runtime: python3.7
      CodeUri:
        Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
        Key: "sumologic-aws-observability/apps/SumoLogicAWSObservabilityHelper/SumoLogicAWSObservabilityHelper.zip"
      MemorySize: 128
      Timeout: 900
      Role:
        Fn::GetAtt:
          - SumoLambdaRole
          - Arn

  SumoSourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::926226587429:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${Section1aSumoDeployment}:${Section1dSumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoLogicAwsSourcesPolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                  - tag:GetResources
                  - cloudwatch:ListMetrics
                  - cloudwatch:GetMetricStatistics
                Resource:
                  "*"

  SumoHostedCollector:
    Type: Custom::Collector
    Condition: install_collector
    Properties:
      ServiceToken: !GetAtt SumoLogicLambdaHelper.Arn
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      CollectorName: !Ref Section3bCollectorName
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  SumoCloudwatchMetricsSource:
    Type: Custom::AWSSource
    Condition: install_cloud_watch_metric_source
    Properties:
      ServiceToken: !GetAtt SumoLogicLambdaHelper.Arn
      Region: !Ref "AWS::Region"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceType: AwsCloudWatch
      Namespaces: !Ref Section4cNamespaces
      SourceName: !Ref Section4bCloudWatchMetricsSourceName
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      RoleArn: !GetAtt SumoSourceRole.Arn

  SumoSNSTopic:
    Type: 'AWS::SNS::Topic'
    Condition: create_sns_subscription
    Properties:
      TopicName: !Join
        - ""
        - - !Sub "sumo-sns-topic-${Section2aAccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]

  SumoSNSpolicy:
    Condition: create_sns_subscription
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SumoTopicPolicy
        Statement:
          - Action:
              - sns:Publish
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:s3:::${Section5bCommonBucketName}"
            Effect: Allow
            Principal:
              "Service": "s3.amazonaws.com"
            Resource:
              - !Ref SumoSNSTopic
      Topics:
        - Ref: SumoSNSTopic

  TargetS3Bucket:
    Condition: create_target_s3_bucket
    Type: AWS::S3::Bucket
    DependsOn:
      - SumoSNSpolicy
    Properties:
      BucketName: !Ref Section5bCommonBucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref SumoSNSTopic

  SumoCloudTrailSource:
    Condition: install_cloudtrail_logs_source
    Type: Custom::AWSSource
    Properties:
      SourceType: AwsCloudTrailBucket
      ServiceToken: !GetAtt SumoLogicLambdaHelper.Arn
      Region: !Ref "AWS::Region"
      SourceName: !Ref Section5eCloudTrailLogsSourceName
      TargetBucketName: !Ref Section5bCommonBucketName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref Section5fCloudTrailLogsSourceCategoryName
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      PathExpression: !Ref Section5dCloudTrailBucketPathExpression
      RoleArn: !GetAtt SumoSourceRole.Arn
      Fields:
        account: !Ref Section2aAccountAlias

  SumoCloudTrailUpdateSource:
    Type: Custom::SumoLogicUpdateFields
    Condition: update_cloudtrail_source
    Properties:
      ServiceToken: !GetAtt SumoLogicLambdaHelper.Arn
      Region: !Ref "AWS::Region"
      SourceName: !Ref Section5eCloudTrailLogsSourceName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      Fields:
        account: !Ref Section2aAccountAlias

  SumoCloudTrailSNSSubscription:
    Condition: install_cloudtrail_logs_source
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn:
        Ref: SumoSNSTopic
      Endpoint: !GetAtt SumoCloudTrailSource.SUMO_ENDPOINT
      Protocol: https
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 40
          minDelayTarget: 10
          maxDelayTarget: 300
          numMinDelayRetries: 3
          numMaxDelayRetries: 5
          numNoDelayRetries: 0
          backoffFunction: exponential

  SumoBucketPolicy:
    Condition: create_target_s3_bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Section5bCommonBucketName
      PolicyDocument:
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:aws:s3:::${Section5bCommonBucketName}"
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${Section5bCommonBucketName}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSBucketExistenceCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${Section5bCommonBucketName}"
          - Sid: AWSAlbLogsPutObjects
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !FindInMap [Region2ELBAccountId, !Ref 'AWS::Region', AccountId]
                  - ":root"
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${Section5bCommonBucketName}/*"
    DependsOn:
      - TargetS3Bucket

  SumoCloudTrail:
    Condition: create_trail
    Type: Custom::AWSTrail
    DependsOn: SumoBucketPolicy
    Properties:
      ServiceToken: !GetAtt SumoLogicLambdaHelper.Arn
      IsLogging: true
      IsMultiRegionTrail: false
      S3BucketName: !Ref Section5bCommonBucketName
      TrailName: !Sub "Aws-Observability-${Section2aAccountAlias}"

Outputs:
  StackName:
    Description: "Stack Name"
    Value: !Ref "AWS::StackName"
  SumoLogicLambdaHelperARN:
    Description: "Sumo Logic Lambda Helper ARN"
    Value: !GetAtt SumoLogicLambdaHelper.Arn
    Export:
      Name: !Sub "${AWS::StackName}-SumoLogicHelperFunctionARN"
  SumoSourceRoleARN:
    Description: "Sumo Logic Source Role ARN"
    Value: !GetAtt SumoSourceRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-SumoSourceRoleARN"
  SumoCollectorID:
    Description: "Sumo Logic Collector ID"
    Condition: install_collector
    Value: !GetAtt SumoHostedCollector.COLLECTOR_ID
    Export:
      Name: !Sub "${AWS::StackName}-CollectorID"
  BucketName:
    Description: "BucketName"
    Value: !Ref Section5bCommonBucketName
  SNSTopicArn:
    Description: "SNS Topic ARN"
    Condition: create_sns_subscription
    Value: !Ref SumoSNSTopic
    Export:
      Name: !Sub "${AWS::StackName}-SNSTopicArn"