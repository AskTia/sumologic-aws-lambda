AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Template to setup the Lambda app with AWS and Sumo Logic resources for AWS Observability Solution."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "Sumo Logic Access Configuration (Required)"
        Parameters:
          - Section1aSumoDeployment
          - Section1bSumoAccessID
          - Section1cSumoAccessKey
          - Section1dSumoOrganizationId
          - Section1eRemoveSumoResourcesOnDeleteStack

      - Label:
          default: "Sumo Logic AWS Resources Tagging Configuration (Required)"
        Parameters:
          - Section2aTagExistingAWSResources
          - Section2bAccountAlias
          - Section2cFilterExpression

      - Label:
          default: "App Details - Sumo Logic Collector Configuration"
        Parameters:
          - Section3aInstallApp
          - Section3bCollectorName

      - Label:
          default: "App Details - CloudWatch Metrics Source Configuration"
        Parameters:
          - Section4aCreateCloudWatchMetricsSource
          - Section4bCloudWatchMetricsSourceName

      - Label:
          default: "App Details - CloudTrail Log Source Configuration"
        Parameters:
          - Section5aCreateCloudTrailBucket
          - Section5bCloudTrailLogsBucketName
          - Section5cCreateCloudTrailLogSource
          - Section5dCloudTrailBucketPathExpression
          - Section5eCloudTrailLogsSourceName
          - Section5fCloudTrailLogsSourceCategoryName

      - Label:
          default: "App Details - CloudWatch Log Source Configuration"
        Parameters:
          - Section6aCreateCloudWatchLogSource
          - Section6bCloudWatchLogsSourceName
          - Section6cCloudWatchLogsSourceCategoryName

      - Label:
          default: "Local Parameters. Do Not Edit the values."
        Parameters:
          - Section7aParentStackName

    ParameterLabels:
      Section1aSumoDeployment:
        default: "Sumo Logic Deployment Name"
      Section1bSumoAccessID:
        default: "Sumo Logic Access ID"
      Section1cSumoAccessKey:
        default: "Sumo Logic Access Key"
      Section1dSumoOrganizationId:
        default: "Sumo Logic Organization Id"
      Section1eRemoveSumoResourcesOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      Section2aTagExistingAWSResources:
        default: "Tag Existing AWS Lambda Resources."
      Section2bAccountAlias:
        default: "Alias for AWS Account Identification"
      Section2cFilterExpression:
        default: "Filter Regular expression"

      Section3aInstallApp:
        default: "Install Sumo Logic App"
      Section3bCollectorName:
        default: "Collector Name"

      Section4aCreateCloudWatchMetricsSource:
        default: "Create Sumo Logic CloudWatch Metrics Source"
      Section4bCloudWatchMetricsSourceName:
        default: "Sumo Logic CloudWatch Metrics Source Name"

      Section5aCreateCloudTrailBucket:
        default: "Create AWS S3 Bucket"
      Section5bCloudTrailLogsBucketName:
        default: "AWS S3 Bucket Name"
      Section5cCreateCloudTrailLogSource:
        default: "Create Sumo Logic CloudTrail Logs Source"
      Section5dCloudTrailBucketPathExpression:
        default: "Path Expression for the logs"
      Section5eCloudTrailLogsSourceName:
        default: "Sumo Logic CloudTrail Logs Source Name"
      Section5fCloudTrailLogsSourceCategoryName:
        default: "Sumo Logic CloudTrail Logs Source Category Name"

      Section6aCreateCloudWatchLogSource:
        default: "Create Sumo Logic CloudWatch Logs Source"
      Section6bCloudWatchLogsSourceName:
        default: "Sumo Logic CloudWatch Logs Source Name"
      Section6cCloudWatchLogsSourceCategoryName:
        default: "Sumo Logic CloudWatch Logs Source Category Name"

      Section7aParentStackName:
        default: "If Any, Name of parent Stack"

Parameters:
  Section1aSumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  Section1bSumoAccessID:
    Type: String
    Description: "Sumo Logic Access ID. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  Section1cSumoAccessKey:
    Type: String
    Description: "Sumo Logic Access Key. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  Section1dSumoOrganizationId:
    Description: "Appears on the Account Overview page that displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."
  Section1eRemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "To delete collectors, sources and apps when the stack is deleted, set this parameter to True. Default is True.
                  Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String

  Section2aTagExistingAWSResources:
    Type: String
    Description: "Yes - Tags the existing AWS Lambda resources with key - Value as account - account alias.
                  No - Skip AWS Resources tagging."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section2bAccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: "Alias must only contain uppercase, lowercase letters, number and length less than or equal to 30 characters."
    MaxLength: 30
  Section2cFilterExpression:
    Type: String
    Default: ""
    Description: "Provide regular expression for matching aws resources. For eg;- 'InstanceType': 't1.micro.*?'|'name': 'Test.*?']|'stageName': 'prod.*?'|'FunctionName': 'Test.*?'|TableName.*?|'LoadBalancerName': 'Test.*?'|'DBClusterIdentifier': 'Test.*?'|'DBInstanceIdentifier': 'Test.*?'"

  Section3aInstallApp:
    Type: String
    Description: "Yes - Installs the Lambda App for the Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this app."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section3bCollectorName:
    Type: String
    Description: "Provide a Collector Name"
    Default: ""

  Section4aCreateCloudWatchMetricsSource:
    Type: String
    Description: "Yes - Creates a Sumo Logic CloudWatch Metrics Source which collects Metrics for multiple Namespaces from the region selected.
                  No - If you already have a CloudWatch Metrics Source collecting Lambda metrics."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section4bCloudWatchMetricsSourceName:
    Type: String
    Description: "Provide a Cloud Watch Metrics Source Name"
    Default: ""

  Section5aCreateCloudTrailBucket:
    Type: String
    Description: "Yes - Create a new CloudTrail bucket in AWS S3.
                  No - Use an existing CloudTrail bucket from AWS S3 which has CloudTrail Logs."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section5bCloudTrailLogsBucketName:
    Type: String
    Description: "Existing Bucket Name - Provide value if the Flag is set to No.
                  New Bucket Name - Provide a unique Bucket Name if the flag is set to Yes."
  Section5cCreateCloudTrailLogSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic Cloud Trail Log Source with provided bucket Name."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section5dCloudTrailBucketPathExpression:
    Type: String
    Description: Path expression to match one or more S3 objects. For example, ABC*.log or ABC.log
    Default: "*"
  Section5eCloudTrailLogsSourceName:
    Type: String
    Description: Change the CloudTrail Source name to be created else default name will be used.
    Default: ""
  Section5fCloudTrailLogsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if CloudTrail Source is not created.\n
                  New - Default will be used if CloudTrail Source is Created"
    Default: AWS/Lambda/CloudTrail/Logs

  Section6aCreateCloudWatchLogSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic Cloud Watch Log Source."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section6bCloudWatchLogsSourceName:
    Type: String
    Description: Change the CloudWatch Log Source name to be created else default name will be used.
    Default: ""
  Section6cCloudWatchLogsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if CloudWatch Log Source is not created.\n
                  New - Default will be used if CloudWatch Log Source is Created"
    Default: AWS/lambda/CloudWatch/Logs

  Section7aParentStackName:
    Type: String
    Default: "ParentStackName"
    Description: Parent Stack Name. Do Not Edit the value.

Mappings:
  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1

Conditions:
  do_not_use_parent_stack: !Equals [ !Ref Section7aParentStackName, "ParentStackName"]

  tag_existing_aws_resources: !Equals [!Ref Section2aTagExistingAWSResources, 'Yes']

  install_app: !Equals [!Ref Section3aInstallApp, 'Yes']
  create_target_s3_bucket: !And
    - !Equals [!Ref Section5aCreateCloudTrailBucket, 'Yes']
    - !Condition create_sns_topic
  install_cloudtrail_logs_source: !Equals [!Ref Section5cCreateCloudTrailLogSource, 'Yes']
  install_cloud_watch_logs_source: !Equals [!Ref Section6aCreateCloudWatchLogSource, 'Yes']
  install_cloud_watch_metric_source: !Equals [!Ref Section4aCreateCloudWatchMetricsSource, 'Yes']
  update_cloudtrail_source: !And
    - !Not [!Condition install_cloudtrail_logs_source]
    - !Not [!Equals [!Ref Section5eCloudTrailLogsSourceName, '']]
    - !Not [!Equals [!Ref Section3bCollectorName, '']]
  update_cloudwatch_log_source: !And
    - !Not [!Condition install_cloud_watch_logs_source]
    - !Not [!Equals [!Ref Section6bCloudWatchLogsSourceName, '']]
    - !Not [!Equals [!Ref Section3bCollectorName, '']]
  install_collector: !Or
    - !Condition install_cloudtrail_logs_source
    - !Condition install_cloud_watch_logs_source
    - !Condition install_cloud_watch_metric_source
    - !Condition update_cloudtrail_source
    - !Condition update_cloudwatch_log_source

  create_sns_topic: !And
    - !Condition do_not_use_parent_stack
    - !Condition install_cloudtrail_logs_source

Resources:
  SumoLogicHelperRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AwsObservabilityLambdaExecutePolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cloudtrail:CreateTrail
                  - cloudtrail:DeleteTrail
                  - cloudtrail:UpdateTrail
                  - cloudtrail:StartLogging
                  - tag:TagResources
                  - tag:UntagResources
                  - lambda:ListFunctions
                  - lambda:TagResource
                  - lambda:UntagResource
                Resource: '*'

  SumoLogicHelperFunction:
    Type: 'AWS::Serverless::Function'
    Condition: do_not_use_parent_stack
    Properties:
      FunctionName: !Join
        - ""
        - - !Sub "sumo-lambda-${Section2bAccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      Handler: main.handler
      Runtime: python3.7
      CodeUri:
        Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
        Key: "sumologic-aws-observability/apps/SumoLogicAWSObservabilityHelper/SumoLogicAWSObservabilityHelper.zip"
      MemorySize: 128
      Timeout: 900
      Role:
        Fn::GetAtt:
          - SumoLogicHelperRole
          - Arn

  SumoRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::926226587429:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${Section1aSumoDeployment}:${Section1dSumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoLogicAwsSourcesPolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                  - tag:GetResources
                  - cloudwatch:ListMetrics
                  - cloudwatch:GetMetricStatistics
                Resource:
                  "*"

  TagAWSResources:
    Type: Custom::TagAWSResources
    Condition: tag_existing_aws_resources
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      Region: !Ref "AWS::Region"
      AWSResource: lambda
      Tags:
        account: !Ref Section2bAccountAlias
      AccountID: !Ref "AWS::AccountId"
      Filter: !Ref Section2cFilterExpression

  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  CreateSumoLogicAWSExplorerView:
    Type: Custom::SumoLogicAWSExplorer
    Condition: do_not_use_parent_stack
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      ExplorerName: "AWS Observability"
      MetadataKeys:
        - "account"
        - "region"
        - "namespace"
        - "entity"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  LambdaMetricWaitHandle:
    Condition: do_not_use_parent_stack
    DependsOn: CreateSumoLogicAWSExplorerView
    Type: "AWS::CloudFormation::WaitConditionHandle"

  LambdaMetricWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !If [do_not_use_parent_stack, !Ref LambdaMetricWaitHandle, !Ref WaitHandle]
      Timeout: "5"
      Count: 0

  LambdaMetricRule:
    Type: Custom::SumoLogicMetricRules
    DependsOn: LambdaMetricWaitCondition
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      MetricRuleName: "AwsObservabilityLambdaMetricsEntityRule"
      MatchExpression: "Namespace=AWS/Lambda FunctionName=*"
      ExtractVariables:
        entity: "$FunctionName._1"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  LambdaFERWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !If [do_not_use_parent_stack, !Ref LambdaMetricWaitHandle, !Ref WaitHandle]
      Timeout: "15"
      Count: 0

  LambdaFieldExtractionRule:
    Type: Custom::SumoLogicFieldExtractionRule
    DependsOn: LambdaFERWaitCondition
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      FieldExtractionRuleName: "AwsObservabilityFieldExtractionRule"
      FieldExtractionRuleScope: !Sub "(_sourceCategory=${Section5fCloudTrailLogsSourceCategoryName} \"eventSource\":\"lambda.amazonaws.com\")"
      FieldExtractionRuleParseExpression: "| json \"eventSource\" | where eventSource in (\"rds.amazonaws.com\", \"apigateway.amazonaws.com\", \"lambda.amazonaws.com\", \"dynamodb.amazonaws.com\") | if (eventSource matches \"rds.amazonaws.com\", \"aws/rds\", if (eventSource matches \"apigateway.amazonaws.com\",  \"aws/apigateway\", if (eventSource matches \"lambda.amazonaws.com\",  \"aws/lambda\", if (eventSource matches \"dynamodb.amazonaws.com\",  \"aws/dynamodb\", \"\")))) as Namespace"
      FieldExtractionRuleParseEnabled: true
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  SumoHostedCollector:
    Type: Custom::Collector
    Condition: install_collector
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !If [do_not_use_parent_stack, !Ref Section1eRemoveSumoResourcesOnDeleteStack, false]
      CollectorName: !Ref Section3bCollectorName
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  SumoCloudwatchMetricsSource:
    Condition: install_cloud_watch_metric_source
    Type: Custom::AWSSource
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceType: AwsCloudWatch
      Namespaces:
        - 'AWS/Lambda'
      SourceName: !Ref Section4bCloudWatchMetricsSourceName
      CollectorId: !If
        - install_collector
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-CollectorID'
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoSourceRoleARN'

  sumoApp:
    Type: Custom::App
    Condition: install_app
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      AppName: "AWS Observability Lambda App"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      AppSources:
        logsrccw: !Sub "_sourceCategory=${Section6cCloudWatchLogsSourceCategoryName}"
        logsrcct: !Sub "_sourceCategory=${Section5fCloudTrailLogsSourceCategoryName}"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  CloudWatchEventFunction:
    Type: AWS::CloudFormation::Stack
    Condition: install_cloud_watch_logs_source
    Properties:
      TemplateURL: "https://s3.amazonaws.com/appdev-cloudformation-templates/DLQLambdaCloudFormation.json"
      Parameters:
        SumoEndPointURL: !GetAtt SumoHTTPSource.SUMO_ENDPOINT
        IncludeLogGroupInfo: true

  SumoHTTPSource:
    Condition: install_cloud_watch_logs_source
    Type: Custom::HTTPSource
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref Section6bCloudWatchLogsSourceName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref Section6cCloudWatchLogsSourceCategoryName
      CollectorId: !If
        - install_collector
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-CollectorID'
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      DateFormat: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
      DateLocatorRegex: '.*"updatedAt":"(.*)".*'
      Fields:
        account: !Ref Section2bAccountAlias
        namespace: "aws/lambda"
        region: !Ref "AWS::Region"

  SumoCloudTrailExportPolicy:
    Condition: create_target_s3_bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Section5bCloudTrailLogsBucketName
      PolicyDocument:
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:aws:s3:::${Section5bCloudTrailLogsBucketName}"
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${Section5bCloudTrailLogsBucketName}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSBucketExistenceCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${Section5bCloudTrailLogsBucketName}"
    DependsOn:
      - TargetS3Bucket

  SumoCloudTrail:
    Condition: create_target_s3_bucket
    Type: Custom::AWSTrail
    DependsOn:
      - SumoCloudTrailExportPolicy
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      IsLogging: true
      IsMultiRegionTrail: false
      S3BucketName: !Ref Section5bCloudTrailLogsBucketName
      TrailName: !Sub "Aws-Observability-${Section2bAccountAlias}"

  TargetS3Bucket:
    Condition: create_target_s3_bucket
    Type: AWS::S3::Bucket
    DependsOn:
      - SumoSNSpolicy
    Properties:
      BucketName: !Ref Section5bCloudTrailLogsBucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref SumoSNSTopic

  SumoSNSTopic:
    Condition: create_sns_topic
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Join
        - ""
        - - !Sub "sumo-sns-topic-${Section2bAccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]

  SumoSNSSubscription:
    Condition: install_cloudtrail_logs_source
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn: !If
        - create_sns_topic
        - !Ref SumoSNSTopic
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SNSTopicArn'
      Endpoint: !GetAtt SumoCloudTrailSource.SUMO_ENDPOINT
      Protocol: https
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 40
          minDelayTarget: 10
          maxDelayTarget: 300
          numMinDelayRetries: 3
          numMaxDelayRetries: 5
          numNoDelayRetries: 0
          backoffFunction: exponential

  SumoSNSpolicy:
    Condition: create_sns_topic
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SumoTopicPolicy
        Statement:
          - Action:
              - sns:Publish
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:s3:::${Section5bCloudTrailLogsBucketName}"
            Effect: Allow
            Principal:
              "Service": "s3.amazonaws.com"
            Resource:
              - !Ref SumoSNSTopic
      Topics:
        - Ref: SumoSNSTopic

  SumoCloudTrailSource:
    Condition: install_cloudtrail_logs_source
    Type: Custom::AWSSource
    Properties:
      SourceType: AwsCloudTrailBucket
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref Section5eCloudTrailLogsSourceName
      TargetBucketName: !Ref Section5bCloudTrailLogsBucketName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref Section5fCloudTrailLogsSourceCategoryName
      CollectorId: !If
        - install_collector
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-CollectorID'
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      PathExpression: !Ref Section5dCloudTrailBucketPathExpression
      Fields:
        account: !Ref Section2bAccountAlias
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoSourceRoleARN'

  SumoCloudTrailUpdateSource:
    Type: Custom::SumoLogicUpdateFields
    Condition: update_cloudtrail_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref Section5eCloudTrailLogsSourceName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      CollectorId: !If
        - install_collector
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-CollectorID'
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      Fields:
        account: !Ref Section2bAccountAlias

  SumoHTTPUpdateSource:
    Type: Custom::SumoLogicUpdateFields
    Condition: update_cloudwatch_log_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref Section6bCloudWatchLogsSourceName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      CollectorId: !If
        - install_collector
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${Section7aParentStackName}-CollectorID'
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      Fields:
        account: !Ref Section2bAccountAlias
        namespace: "aws/lambda"
        region: !Ref "AWS::Region"

Outputs:
  CloudWatchLambdaARN:
    Description: "Cloud Watch Lambda ARN"
    Condition: install_cloud_watch_logs_source
    Value: !GetAtt CloudWatchEventFunction.Outputs.SumoCWLogsLambdaArn